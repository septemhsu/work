1 - Docker

1.1
Please explain this command.

docker run \
	-d \
	-e TEST_ENV=HELLO_WORLD \
	-v /etc/localtime:/etc/localtime:ro \
	-p 8080:80 \
	-p 5566:443 \
	--link mysql:db \
	--dns=10.0.0.1 \
	--dns=192.168.0.1 \
	--dns-search=local.test.com \
	--dns-search=test.com \
	--name test_docker \
	registry.local.test.com/infra/test_docker:0-17.08.03-caf85b05-rc

這一題是要背景執行 (-d) 一個 docker image registry.local.test.com/infra/test_docker 其 tag 為 0-17.08.03-caf85b05-rc，
設置其容器名稱為 test_docker (--name test_docker)
並設置其環境變數加上 TEST_ENV=HELLO_WORLD (-e TEST_ENV=HELLO_WORLD)、
將主機上的 /etc/localtime 掛載到容器的 /etc/localtime，且其上的檔案對於訪問容器的使用者為 read only (-v /etc/localtime:/etc/localtime:ro)、
將主機上的 8080 和 5566 port 對應到容器的 80 和 443 port (-p 8080:80, -p 5566:443)、
設置此容器可以連到 mysql 這個容器，將其別名設為 db (--link mysql:db)、
設定此容器的 dns server 為 10.0.0.1 和 192.168.0.1 (--dns=10.0.0.1, --dns=192.168.0.1)，
當在搜索特定主機時，也會多搜尋 local.test.com 和 test.com 這兩個 domain 是否有此主機 (--dns-search=local.test.com, --dns-search=test.com)

1.2
Please explain this command.

docker rmi $(docker images | grep "^<none>" | awk "{print $3}")

此指令將所有 tag 為 <none> 的 image 刪除

2 - Linux
Please explain the functionality of the following two files in Linux operation system.

/etc/hosts
/etc/resolv.conf

/etc/hosts 裡面存放主機名稱對應 IP 的列表，當要搜尋一台主機時，預設先從 /etc/hosts 找是否有其 IP 位置，若找不到則透過 /etc/resolv.conf 裡面存的 dns 查找。


3 - Programming
Please write a program to read access.log; find out the logs with return code 404; count the occurrence of each IP among these logs and output them in ascending order.

Expected output:

1 118.163.135.13
1 123.51.165.114
1 210.242.60.1
1 210.243.21.253
1 220.134.215.89
1 59.125.23.30
1 60.250.66.98
1 74.222.14.82
3 64.71.171.80
4 64.71.171.86
You may use any language you like; please include your code in the repository and teach us how to reproduce your result.

目錄下的 parse.py 可讀取同目錄底下的 access.log，
因為 access.log 格式固定，所以我直接取從開頭到空白前的字串為 IP，
再掃到 HTTP version 後面的空白+1的位置，取其到下一個空白前的字串為 response code，
若 response code 為 404，則從一開始就宣告的 dictionary 裡面看有沒有這個 IP 的 key，
若沒有則新增其，value 為 1，若有的話將其 value 改成原 value + 1。
做完之後，取出其 element 的 list，生出 key 和 value 對調的 list，再根據 key 去做排序，最後 output 出來。


4 - Questionnaire
1. How long did you spend answering?
2. Which question is the most easy for you? Why?
3. Which question is the most difficult for you? Why?
4. Regarding your working style, when coding, do you prefer to work alone or in teams? Same question but when you are doing design and/or research.
5. From what you have surveyed, what aspect of Bridgewell matches you the most? What aspect match you the least?
6. What kind of contribution you expect to make to Bridgewell?
7. What do you expect to take away from Bridgewell?